DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS amigo CASCADE;
DROP TABLE IF EXISTS solicitacao_amizade CASCADE;
DROP TABLE IF EXISTS postagem CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;

CREATE TABLE usuario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome_completo VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	apelido VARCHAR(50) DEFAULT '',
	data_nascimento DATE NOT NULL,
	senha VARCHAR(128) NOT NULL,
	imagem_perfil VARCHAR(512) DEFAULT 'https://d2d7ho1ae66ldi.cloudfront.net/ArquivoNoticias/55ac55c4-5bb0-11ed-aa6e-9587410378a2/Fgpu17hWQAUmJ5n.jpeg',
	serie_preferida VARCHAR(255) NOT NULL,
	ativo BOOLEAN NOT NULL
);
ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY (id);
ALTER TABLE usuario ADD CONSTRAINT uk_usuario_email UNIQUE (email);


CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL
);
ALTER TABLE permissao ADD CONSTRAINT pk_permissao PRIMARY KEY (id);
ALTER TABLE permissao ADD CONSTRAINT uk_permissao UNIQUE (nome, usuario_id);
ALTER TABLE permissao ADD CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;

CREATE TABLE amigo(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	amigo_id BIGINT NOT NULL,
	data_de_amizade DATE NOT NULL,
	ativo BOOLEAN NOT NULL
);
ALTER TABLE amigo ADD CONSTRAINT pk_amigo PRIMARY KEY (id);
ALTER TABLE amigo ADD CONSTRAINT uk_amigo_usuario UNIQUE(usuario_id, amigo_id);
ALTER TABLE amigo ADD CONSTRAINT fk_amigo_amigo FOREIGN KEY (amigo_id) REFERENCES usuario;
ALTER TABLE amigo ADD CONSTRAINT fk_amigo_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;

CREATE TABLE solicitacao_amizade(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_solicitado_id BIGINT NOT NULL,
	usuario_solicitante_id BIGINT NOT NULL,
	data_pedido DATE NOT NULL,
	status VARCHAR(9) NOT NULL
);
ALTER TABLE solicitacao_amizade ADD CONSTRAINT pk_solicitacao_amizade PRIMARY KEY(id);
ALTER TABLE solicitacao_amizade ADD CONSTRAINT fk_solicitacao_amizade_solicitado FOREIGN KEY (usuario_solicitado_id) REFERENCES usuario;
ALTER TABLE solicitacao_amizade ADD CONSTRAINT fk_solicitacao_amizade_solicitante FOREIGN KEY (usuario_solicitante_id) REFERENCES usuario;
ALTER TABLE solicitacao_amizade ADD CONSTRAINT ck_solicitacao_amizade_status CHECK (status IN ('PENDENTE', 'ACEITA', 'REJEITADA'));

CREATE TABLE postagem (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	id_usuario BIGINT NOT NULL,
	data_postagem DATE NOT NULL,
	privacidade VARCHAR(7) DEFAULT 'PUBLICA',
	imagem TEXT,
	mensagem VARCHAR(512) NOT NULL,
	ativo BOOLEAN NOT NULL
);
ALTER TABLE postagem ADD CONSTRAINT pk_postagem PRIMARY KEY (id);
ALTER TABLE postagem ADD CONSTRAINT fk_postagem_usuario FOREIGN KEY (id_usuario) REFERENCES usuario;
ALTER TABLE postagem ADD CONSTRAINT ck_postagem_privacidade CHECK (privacidade IN ('PUBLICA', 'PRIVADA'));

CREATE TABLE curtida(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	id_postagem BIGINT NOT NULL,
	id_usuario_curtiu BIGINT NOT NULL,
	ativo BOOLEAN NOT NULL
);
ALTER TABLE curtida ADD CONSTRAINT pk_curtida PRIMARY KEY (id);
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_postagem FOREIGN KEY (id_postagem) REFERENCES postagem;
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_usuario FOREIGN KEY (id_usuario_curtiu) REFERENCES usuario;
ALTER TABLE curtida ADD CONSTRAINT uk_curtida_postagem_usuario UNIQUE(id_postagem, id_usuario_curtiu);

CREATE TABLE comentario(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	id_postagem BIGINT NOT NULL,
	id_usuario_comentou BIGINT NOT NULL,
	mensagem VARCHAR(512) NOT NULL,
	imagem TEXT,
	ativo BOOLEAN NOT NULL
);
ALTER TABLE comentario ADD CONSTRAINT pk_comentario PRIMARY KEY (id);
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_postagem FOREIGN KEY (id_postagem) REFERENCES postagem;
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_usuario FOREIGN KEY (id_usuario_comentou) REFERENCES usuario;
ALTER TABLE comentario ADD CONSTRAINT uk_comentario_postagem_usuario UNIQUE(id_postagem, id_usuario_comentou);